type Photo {
  id: ID!
  uuid: String!
  location: Location!
  likes: Int!
  commentsCount: Int!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  active: Boolean!
  imgUrl: String!
  thumbUrl: String!
}

type Location {
  lat: Float!
  lon: Float!
}

input CreatePhotoInput {
  id: ID!
  uuid: String!
  location: Location!
  likes: Int!
  commentsCount: Int!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  active: Boolean!
}

input UpdatePhotoInput {
  id: ID!
  likes: Int!
  commentsCount: Int!
  updatedAt: AWSDateTime!
  active: Boolean!
}

type Query {
  listPhotos: [Photo]
  getPhotoById(photoId: ID!): Photo
}

type Mutation {
  createPhoto(photo: CreatePhotoInput!): Photo
  updatePhoto(photo: UpdatePhotoInput!): Photo
  deletePhoto(photoId: ID!): Photo
}

type Subscription {
  onCreatePhoto: Photo
    @aws_subscribe(mutations: ["createPhoto"])
  onUpdatePhoto: Photo
    @aws_subscribe(mutations: ["updatePhoto"])
  onDeletePhoto: Photo
    @aws_subscribe(mutations: ["deletePhoto"])
}
